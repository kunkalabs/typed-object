!function(e){"use strict";var t=function(e,t){var n=t||this,o={},f=Object.getOwnPropertyNames(e),r=function(e,t,n){throw new TypeError("Can't set property <TypedObject>."+e+', type "'+n+'" is not assignable to type "'+t+'"')},p=function(t,n){var f=typeof e[t];switch(f){case"object":"object"!=typeof n&&("undefined"!=typeof e[t].length?r(t,"array",typeof n):r(t,"object",typeof n)),"undefined"!=typeof e[t].length&&"undefined"==typeof n.length&&r(t,"array","object"),"undefined"!=typeof n.length&&"undefined"==typeof e[t].length&&r(t,"object","array");break;default:typeof n!==f&&r(t,f,typeof n)}o[t]=n};f.forEach(function(t){if(o[t]=e[t],"function"==typeof e[t])throw new TypeError("Can't define property <TypedObject>."+t+", methods are not permitted on typed objects.");Object.defineProperty(n,t,{enumerable:!0,get:function(){return o[t]},set:function(e){p(t,e)}})}),Object.seal(n)};return t.prototype.toObject=function(){var e=this,t={},n=Object.getOwnPropertyNames(this);return n.forEach(function(n){t[n]=e[n]}),t},e?void("object"==typeof e.exports&&"object"==typeof e.module?module.exports=t:"function"==typeof e.define&&e.define.amd?e.define(function(){return t}):("undefined"==typeof e.TypedObject||"function"!=typeof e.mixItUp)&&(e.TypedObject=t)):void(module.exports=t)}("undefined"!=typeof window?window:null);
//# sourceMappingURL=typed-object.js.map